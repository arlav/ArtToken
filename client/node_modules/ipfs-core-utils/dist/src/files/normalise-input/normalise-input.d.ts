declare function _exports<Content extends Blob | AsyncIterable<Uint8Array>>(input: Source, normaliseContent: (content: ToContent) => Content | Promise<Content>): AsyncIterable<Directory | File<Content>>;
export = _exports;
export type MTime = {
    /**
     * - the number of seconds since (positive) or before
     * (negative) the Unix Epoch began
     */
    secs: number;
    /**
     * - the number of nanoseconds since the last full
     * second.
     */
    nsecs: number;
};
export type Mode = number;
export type Directory = {
    path: string;
    mode?: number | undefined;
    mtime?: import("../format-mtime").MTime | undefined;
    content?: undefined;
};
export type FileInput = {
    path?: string | undefined;
    content?: string | String | Blob | AsyncIterable<Uint8Array> | ArrayBufferView | ArrayBuffer | Iterable<Uint8Array> | ReadableStream<Uint8Array> | undefined;
    mode?: string | number | undefined;
    mtime?: import("../format-mtime").MTime | Date | [number, number] | undefined;
};
/**
 * Time representation as tuple of two integers, as per the output of
 * [`process.hrtime()`](https://nodejs.org/dist/latest/docs/api/process.html#process_process_hrtime_time).
 */
export type UnixTime = import("../format-mtime").MTime | Date | [number, number];
export type HRTime = [number, number];
export type ToContent = string | String | Blob | AsyncIterable<Uint8Array> | ArrayBufferView | ArrayBuffer | Iterable<Uint8Array> | ReadableStream<Uint8Array>;
export type ToFile = string | String | Blob | AsyncIterable<Uint8Array> | ArrayBufferView | ArrayBuffer | Iterable<Uint8Array> | ReadableStream<Uint8Array> | FileInput;
export type Source = Iterable<string | String | Blob | AsyncIterable<Uint8Array> | ArrayBufferView | ArrayBuffer | Iterable<Uint8Array> | ReadableStream<Uint8Array> | FileInput> | AsyncIterable<string | String | Blob | AsyncIterable<Uint8Array> | ArrayBufferView | ArrayBuffer | Iterable<Uint8Array> | ReadableStream<Uint8Array> | FileInput> | ReadableStream<string | String | Blob | AsyncIterable<Uint8Array> | ArrayBufferView | ArrayBuffer | Iterable<Uint8Array> | ReadableStream<Uint8Array> | FileInput>;
export type File<Content extends Blob | AsyncIterable<Uint8Array>> = {
    path: string;
    mode?: number | undefined;
    mtime?: import("../format-mtime").MTime | undefined;
    content?: Content | undefined;
};
export type Entry<Content extends Blob | AsyncIterable<Uint8Array>> = File<Content> | Directory;
//# sourceMappingURL=normalise-input.d.ts.map