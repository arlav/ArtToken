{"remainingRequest":"/Users/arlav/Documents/GitHub/ArtToken/client/node_modules/babel-loader/lib/index.js!/Users/arlav/Documents/GitHub/ArtToken/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/arlav/Documents/GitHub/ArtToken/client/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/arlav/Documents/GitHub/ArtToken/client/src/components/ArtItems/Purchased.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/arlav/Documents/GitHub/ArtToken/client/src/components/ArtItems/Purchased.vue","mtime":1606592072100},{"path":"/Users/arlav/Documents/GitHub/ArtToken/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/arlav/Documents/GitHub/ArtToken/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/arlav/Documents/GitHub/ArtToken/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/arlav/Documents/GitHub/ArtToken/client/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2FybGF2L0RvY3VtZW50cy9HaXRIdWIvQXJ0VG9rZW4vY2xpZW50L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IHsgaW5qZWN0LCByZWYgfSBmcm9tICJ2dWUiOwppbXBvcnQgeyBVc2VFdGhlcnMgfSBmcm9tICJAL3BsdWdpbnMvZXRoZXJzIjsKaW1wb3J0IHsgQUNDT1VOVF9JTkpFQ1RJT05fS0VZIH0gZnJvbSAiQC92aWV3L2NvbnN0YW50cyI7CmV4cG9ydCBkZWZhdWx0IHsKICBzZXR1cDogZnVuY3Rpb24gc2V0dXAoKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgdmFyIGFjY291bnQsIGV0aGVycywgdG9rZW5VUklzLCBnZXRUb2tlbnM7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgYWNjb3VudCA9IGluamVjdChBQ0NPVU5UX0lOSkVDVElPTl9LRVkpOwogICAgICAgICAgICAgIGV0aGVycyA9IFVzZUV0aGVycygpOwogICAgICAgICAgICAgIHRva2VuVVJJcyA9IHJlZihbXSk7CgogICAgICAgICAgICAgIGdldFRva2VucyA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICAgICAgICAgICAgdmFyIHRva2VuQmFsYW5jZSwgdG9rZW5JZHMsIGksIHRva2VuT3duZXIsIHRva2VuVVJJOwogICAgICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBOdW1iZXI7CiAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGV0aGVycy5iYWxhbmNlT2YoYWNjb3VudC52YWx1ZSk7CgogICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQudDEgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgICAgICAgICAgIHRva2VuQmFsYW5jZSA9ICgwLCBfY29udGV4dC50MCkoX2NvbnRleHQudDEpOwogICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBldGhlcnMuX3Rva2VuSWRzKCk7CgogICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICAgICAgICAgICAgdG9rZW5JZHMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgICAgICAgICAgIGkgPSAxOwoKICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghKGkgPD0gdG9rZW5JZHMpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjM7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMjsKICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZXRoZXJzLm93bmVyT2YoaSk7CgogICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgICAgICAgICAgICAgIHRva2VuT3duZXIgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoISh0b2tlbk93bmVyLnRvTG93ZXJDYXNlKCkgPT09IGFjY291bnQudmFsdWUpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTg7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNjsKICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZXRoZXJzLnRva2VuVVJJKGkpOwoKICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgICAgICAgICAgICAgICB0b2tlblVSSSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgdG9rZW5VUklzLnZhbHVlLnB1c2godG9rZW5VUkkpOwoKICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAxODoKICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoISh0b2tlblVSSXMudmFsdWUubGVuZ3RoID09PSB0b2tlbkJhbGFuY2UpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjA7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoImJyZWFrIiwgMjMpOwoKICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAyMDoKICAgICAgICAgICAgICAgICAgICAgICAgICBpKys7CiAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDIzOgogICAgICAgICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gZ2V0VG9rZW5zKCkgewogICAgICAgICAgICAgICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICB9KCk7CgogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNjsKICAgICAgICAgICAgICByZXR1cm4gZ2V0VG9rZW5zKCk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIHsKICAgICAgICAgICAgICAgIHRva2VuVVJJczogdG9rZW5VUklzCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSkoKTsKICB9Cn07"},{"version":3,"sources":["/Users/arlav/Documents/GitHub/ArtToken/client/src/components/ArtItems/Purchased.vue"],"names":[],"mappings":";;;AAaA,SAAS,MAAT,EAAiB,GAAjB,QAA4B,KAA5B;AAEA,SAAS,SAAT,QAA0B,kBAA1B;AACA,SAAS,qBAAT,QAAsC,kBAAtC;AAEA,eAAe;AACR,EAAA,KADQ,mBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACP,cAAA,OADO,GACG,MAAM,CAAC,qBAAD,CADT;AAEP,cAAA,MAFO,GAEE,SAAS,EAFX;AAIP,cAAA,SAJO,GAIK,GAAG,CAAC,EAAD,CAJR;;AAMP,cAAA,SANO;AAAA,mFAMK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCACI,MADJ;AAAA;AAAA,iCACiB,MAAM,CAAC,SAAP,CAAiB,OAAO,CAAC,KAAzB,CADjB;;AAAA;AAAA;AACX,0BAAA,YADW;AAAA;AAAA,iCAEM,MAAM,CAAC,SAAP,EAFN;;AAAA;AAEX,0BAAA,QAFW;AAIR,0BAAA,CAJQ,GAIJ,CAJI;;AAAA;AAAA,gCAID,CAAA,IAAK,QAJJ;AAAA;AAAA;AAAA;;AAAA;AAAA,iCAKS,MAAM,CAAC,OAAP,CAAe,CAAf,CALT;;AAAA;AAKV,0BAAA,UALU;;AAAA,gCAMZ,UAAU,CAAC,WAAX,OAA6B,OAAO,CAAC,KANzB;AAAA;AAAA;AAAA;;AAAA;AAAA,iCAOQ,MAAM,CAAC,QAAP,CAAgB,CAAhB,CAPR;;AAAA;AAOT,0BAAA,QAPS;AAQf,0BAAA,SAAS,CAAC,KAAV,CAAgB,IAAhB,CAAqB,QAArB;;AARe;AAAA,gCAWZ,SAAS,CAAC,KAAV,CAAgB,MAAhB,KAA2B,YAXf;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAIc,0BAAA,CAAC,EAJf;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANL;;AAAA,gCAMP,SANO;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAqBP,SAAS,EArBF;;AAAA;AAAA,gDAuBN;AACN,gBAAA,SAAQ,EAAR;AADM,eAvBM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0Bd;AA3Bc,CAAf","sourcesContent":["<template>\n  <div v-if=\"tokenURIs.length > 0\" class=\"container\">\n    <h2 class=\"title\">My Art Purchases</h2>\n\n    <div class=\"flex art-item-list\">\n      <ul v-for=\"uri in tokenURIs\" :key=\"uri\">\n        <li><img class=\"art-item\" :src=\"uri\" alt=\"Art\" /></li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { inject, ref } from \"vue\";\n\nimport { UseEthers } from \"@/plugins/ethers\";\nimport { ACCOUNT_INJECTION_KEY } from \"@/view/constants\";\n\nexport default {\n\tasync setup() {\n\t\tconst account = inject(ACCOUNT_INJECTION_KEY);\n\t\tconst ethers = UseEthers();\n\n\t\tconst tokenURIs = ref([]);\n\n\t\tconst getTokens = async () => {\n\t\t\tconst tokenBalance = Number(await ethers.balanceOf(account.value));\n\t\t\tconst tokenIds = await ethers._tokenIds();\n\n\t\t\tfor (let i = 1; i <= tokenIds; i++) {\n\t\t\t\tconst tokenOwner = await ethers.ownerOf(i);\n\t\t\t\tif (tokenOwner.toLowerCase() === account.value) {\n\t\t\t\t\tconst tokenURI = await ethers.tokenURI(i);\n\t\t\t\t\ttokenURIs.value.push(tokenURI);\n\t\t\t\t}\n\n\t\t\t\tif (tokenURIs.value.length === tokenBalance) break;\n\t\t\t}\n\t\t};\n\n\t\tawait getTokens();\n\n\t\treturn {\n\t\t\ttokenURIs\n\t\t};\n\t}\n};\n</script>\n\n<style scoped>\n.container {\n  margin: 100px 0;\n  width: 100%;\n}\n</style>\n"],"sourceRoot":""}]}