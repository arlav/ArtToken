{"remainingRequest":"/Users/arlav/Documents/GitHub/ArtToken/client/node_modules/babel-loader/lib/index.js!/Users/arlav/Documents/GitHub/ArtToken/client/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/arlav/Documents/GitHub/ArtToken/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/arlav/Documents/GitHub/ArtToken/client/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/arlav/Documents/GitHub/ArtToken/client/src/view/Home.vue?vue&type=template&id=6c36d3c0&scoped=true&bindings={\"connect\":\"setup\",\"account\":\"setup\",\"hasPayment\":\"setup\",\"checkPayments\":\"setup\",\"withdrawPayments\":\"setup\"}","dependencies":[{"path":"/Users/arlav/Documents/GitHub/ArtToken/client/src/view/Home.vue","mtime":1606592072101},{"path":"/Users/arlav/Documents/GitHub/ArtToken/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/arlav/Documents/GitHub/ArtToken/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/arlav/Documents/GitHub/ArtToken/client/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/arlav/Documents/GitHub/ArtToken/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/arlav/Documents/GitHub/ArtToken/client/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCBjcmVhdGVDb21tZW50Vk5vZGUgYXMgX2NyZWF0ZUNvbW1lbnRWTm9kZSwgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCB3aXRoU2NvcGVJZCBhcyBfd2l0aFNjb3BlSWQsIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7Cgp2YXIgX3dpdGhJZCA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoImRhdGEtdi02YzM2ZDNjMCIpOwoKX3B1c2hTY29wZUlkKCJkYXRhLXYtNmMzNmQzYzAiKTsKCnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAiZmxleCBob21lLWNvbnRhaW5lciIKfTsKCnZhciBfaG9pc3RlZF8yID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiaDEiLCB7CiAgY2xhc3M6ICJ0aXRsZSIKfSwgIkJ1eSBEaWdpdGFsIEFydCIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCl9wb3BTY29wZUlkKCk7CgpleHBvcnQgdmFyIHJlbmRlciA9IC8qI19fUFVSRV9fKi9fd2l0aElkKGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF9BZGRBcnRJdGVtID0gX3Jlc29sdmVDb21wb25lbnQoIkFkZEFydEl0ZW0iKTsKCiAgdmFyIF9jb21wb25lbnRfQXJ0SXRlbXMgPSBfcmVzb2x2ZUNvbXBvbmVudCgiQXJ0SXRlbXMiKTsKCiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJzZWN0aW9uIiwgX2hvaXN0ZWRfMSwgW19ob2lzdGVkXzIsICRzZXR1cC5hY2NvdW50ID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9GcmFnbWVudCwgewogICAga2V5OiAwCiAgfSwgWyEkc2V0dXAuaGFzUGF5bWVudCA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiYnV0dG9uIiwgewogICAga2V5OiAwLAogICAgb25DbGljazogX2NhY2hlWzFdIHx8IChfY2FjaGVbMV0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkc2V0dXAuY2hlY2tQYXltZW50cygpOwogICAgfSkKICB9LCAiIENoZWNrIGZvciBQYXltZW50cyAiKSkgOiAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImJ1dHRvbiIsIHsKICAgIGtleTogMSwKICAgIGNsYXNzOiAid2l0aGRyYXctYnRuIiwKICAgIG9uQ2xpY2s6IF9jYWNoZVsyXSB8fCAoX2NhY2hlWzJdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJHNldHVwLndpdGhkcmF3UGF5bWVudHMoKTsKICAgIH0pCiAgfSwgIiBXaXRoZHJhdyBQYXltZW50cyAiKSksIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X0FkZEFydEl0ZW0pLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9BcnRJdGVtcyldLCA2NAogIC8qIFNUQUJMRV9GUkFHTUVOVCAqLwogICkpIDogKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJidXR0b24iLCB7CiAgICBrZXk6IDEsCiAgICBjbGFzczogImNvbm5lY3QtYnRuIiwKICAgIG9uQ2xpY2s6IF9jYWNoZVszXSB8fCAoX2NhY2hlWzNdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJHNldHVwLmNvbm5lY3QoKTsKICAgIH0pCiAgfSwgIiBDb25uZWN0IHRvIEFwcCAiKSldKTsKfSk7"},{"version":3,"sources":["/Users/arlav/Documents/GitHub/ArtToken/client/src/view/Home.vue"],"names":[],"mappings":";;;;;;;AACW,EAAA,KAAK,EAAC;;;8BACb,YAAA,CAAsC,IAAtC,EAAsC;AAAlC,EAAA,KAAK,EAAC;AAA4B,CAAtC,EAAkB,iBAAlB,EAAiC,CAAA;AAAA;AAAjC,C;;;;;;;;;uBADF,YAAA,CAmBU,SAnBV,EAAA,UAAA,EAmBU,CAlBR,UAkBQ,EAhBqB,MAAA,CAAA,O,kBAA7B,YAAA,CAWW,SAXX,EAWW;AAAA,IAAA,GAAA,EAAA;AAAA,GAXX,EAWW,C,CAVM,MAAA,CAAA,U,kBAAf,YAAA,CAES,QAFT,EAES;UAAA;AAFmB,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAAE,MAAA,CAAA,aAAA,EAAF;AAAA,KAAA;AAExB,GAFT,EAAoD,sBAApD,C,mBAIA,YAAA,CAES,QAFT,EAES;UAAA;AAFD,IAAA,KAAK,EAAC,cAEL;AAF4B,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAAE,MAAA,CAAA,gBAAA,EAAF;AAAA,KAAA;AAEjC,GAFT,EAAgE,qBAAhE,C,CAMS,EAFT,YAAA,CAAc,qBAAd,CAES,EADT,YAAA,CAAY,mBAAZ,CACS,CAXX,E;;AAAA,G,mBAaA,YAAA,CAES,QAFT,EAES;UAAA;AAFM,IAAA,KAAK,EAAC,aAEZ;AAF2B,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAAE,MAAA,CAAA,OAAA,EAAF;AAAA,KAAA;AAEhC,GAFT,EAAsD,kBAAtD,C,CAGQ,CAnBV,C","sourcesContent":["<template>\n  <section class=\"flex home-container\">\n    <h1 class=\"title\">Buy Digital Art</h1>\n\n    <template class=\"flex\" v-if=\"account\">\n      <button v-if=\"!hasPayment\" @click=\"checkPayments()\">\n        Check for Payments\n      </button>\n\n      <button class=\"withdraw-btn\" v-else @click=\"withdrawPayments()\">\n        Withdraw Payments\n      </button>\n\n      <AddArtItem />\n      <ArtItems />\n    </template>\n\n    <button v-else class=\"connect-btn\" @click=\"connect()\">\n      Connect to App\n    </button>\n  </section>\n</template>\n\n<script>\nimport { ref, provide } from \"vue\";\n\nimport { UseEthers } from \"@/plugins/ethers\";\nimport Components from \"@/components/index\";\nimport { ACCOUNT_INJECTION_KEY } from \"./constants\";\n\nexport default {\n\tcomponents: {\n\t\t...Components\n\t},\n\n\tsetup() {\n\t\tconst account = ref(\"\");\n\t\tconst hasPayment = ref(false);\n\t\tconst ethers = UseEthers();\n\n\t\tconst checkPayments = async () => {\n\t\t\thasPayment.value = Number(await ethers.payments(account.value)) > 0;\n\t\t};\n\n\t\tconst withdrawPayments = async () => {\n\t\t\tawait ethers.getPayments();\n\t\t\thasPayment.value = false;\n\t\t};\n\n\t\tconst connect = async () => {\n\t\t\tconst ethAccounts = await window.ethereum.request({\n\t\t\t\tmethod: \"eth_requestAccounts\"\n\t\t\t});\n\n\t\t\taccount.value = ethAccounts[0];\n\t\t};\n\n\t\tprovide(ACCOUNT_INJECTION_KEY, account);\n\n\t\treturn {\n\t\t\tconnect,\n\t\t\taccount,\n\t\t\thasPayment,\n\t\t\tcheckPayments,\n\t\t\twithdrawPayments\n\t\t};\n\t}\n};\n</script>\n\n<style scoped>\n.home-container {\n  flex-direction: column;\n  align-items: center;\n}\n\n.title {\n  font-size: 5em;\n  margin: 0;\n  padding: 50px 0 20px 0;\n  font-family: \"Fredoka One\", sans-serif;\n}\n\n.connect-btn {\n  margin: 30px 0;\n}\n\n.withdraw-btn {\n  background-color: rgb(22, 128, 57);\n}\n</style>\n"],"sourceRoot":""}]}