{"remainingRequest":"/Users/arlav/Documents/GitHub/ArtToken/client/node_modules/babel-loader/lib/index.js!/Users/arlav/Documents/GitHub/ArtToken/client/node_modules/eslint-loader/index.js??ref--13-0!/Users/arlav/Documents/GitHub/ArtToken/client/src/plugins/ethers.js","dependencies":[{"path":"/Users/arlav/Documents/GitHub/ArtToken/client/src/plugins/ethers.js","mtime":1606592072100},{"path":"/Users/arlav/Documents/GitHub/ArtToken/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/arlav/Documents/GitHub/ArtToken/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/arlav/Documents/GitHub/ArtToken/client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgZXRoZXJzIH0gZnJvbSAiZXRoZXJzIjsKaW1wb3J0IHsgaW5qZWN0IH0gZnJvbSAidnVlIjsKaW1wb3J0IEFydFRva2VuIGZyb20gIi4uLy4uLy4uL2J1aWxkL2NvbnRyYWN0cy9BcnRUb2tlbi5qc29uIjsKdmFyIEVUSEVSU19JTkpFQ1RJT05fS0VZID0gIkVUSEVSUyI7Cgp2YXIgbmV3RXRoZXJzID0gZnVuY3Rpb24gbmV3RXRoZXJzKCkgewogIHZhciBwcm92aWRlciA9IG5ldyBldGhlcnMucHJvdmlkZXJzLldlYjNQcm92aWRlcih3aW5kb3cuZXRoZXJldW0pOwogIHZhciBzaWduZXIgPSBwcm92aWRlci5nZXRTaWduZXIoKTsKICByZXR1cm4gbmV3IGV0aGVycy5Db250cmFjdChBcnRUb2tlbi5uZXR3b3Jrc1s1Nzc3XS5hZGRyZXNzLCBBcnRUb2tlbi5hYmksIHNpZ25lcik7Cn07CgpmdW5jdGlvbiBVc2VFdGhlcnMoKSB7CiAgdmFyIGV0aGVycyA9IGluamVjdChFVEhFUlNfSU5KRUNUSU9OX0tFWSk7CgogIGlmICghZXRoZXJzKSB7CiAgICB0aHJvdyBuZXcgRXJyb3IoIkV0aGVycyBjb250cmFjdCBpbnN0YW5jZSBub3QgZm91bmQiKTsKICB9CgogIHJldHVybiBldGhlcnM7Cn0KCmV4cG9ydCB7IEVUSEVSU19JTkpFQ1RJT05fS0VZLCBuZXdFdGhlcnMsIFVzZUV0aGVycyB9Ow=="},{"version":3,"sources":["/Users/arlav/Documents/GitHub/ArtToken/client/src/plugins/ethers.js"],"names":["ethers","inject","ArtToken","ETHERS_INJECTION_KEY","newEthers","provider","providers","Web3Provider","window","ethereum","signer","getSigner","Contract","networks","address","abi","UseEthers","Error"],"mappings":"AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,MAAT,QAAuB,KAAvB;AAEA,OAAOC,QAAP,MAAqB,wCAArB;AAEA,IAAMC,oBAAoB,GAAG,QAA7B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACvB,MAAMC,QAAQ,GAAG,IAAIL,MAAM,CAACM,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,CAAjB;AACA,MAAMC,MAAM,GAAGL,QAAQ,CAACM,SAAT,EAAf;AAEA,SAAO,IAAIX,MAAM,CAACY,QAAX,CACNV,QAAQ,CAACW,QAAT,CAAkB,IAAlB,EAAwBC,OADlB,EAENZ,QAAQ,CAACa,GAFH,EAGNL,MAHM,CAAP;AAKA,CATD;;AAWA,SAASM,SAAT,GAAqB;AACpB,MAAMhB,MAAM,GAAGC,MAAM,CAACE,oBAAD,CAArB;;AAEA,MAAI,CAACH,MAAL,EAAa;AACZ,UAAM,IAAIiB,KAAJ,CAAU,oCAAV,CAAN;AACA;;AAED,SAAOjB,MAAP;AACA;;AAED,SAASG,oBAAT,EAA+BC,SAA/B,EAA0CY,SAA1C","sourcesContent":["import { ethers } from \"ethers\";\nimport { inject } from \"vue\";\n\nimport ArtToken from \"../../../build/contracts/ArtToken.json\";\n\nconst ETHERS_INJECTION_KEY = \"ETHERS\";\n\nconst newEthers = () => {\n\tconst provider = new ethers.providers.Web3Provider(window.ethereum);\n\tconst signer = provider.getSigner();\n\n\treturn new ethers.Contract(\n\t\tArtToken.networks[5777].address,\n\t\tArtToken.abi,\n\t\tsigner\n\t);\n};\n\nfunction UseEthers() {\n\tconst ethers = inject(ETHERS_INJECTION_KEY);\n\n\tif (!ethers) {\n\t\tthrow new Error(\"Ethers contract instance not found\");\n\t}\n\n\treturn ethers;\n}\n\nexport { ETHERS_INJECTION_KEY, newEthers, UseEthers };\n"]}]}