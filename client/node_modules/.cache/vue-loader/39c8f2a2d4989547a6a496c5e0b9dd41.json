{"remainingRequest":"/Users/arlav/Documents/GitHub/ArtToken/client/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/arlav/Documents/GitHub/ArtToken/client/src/components/ArtItems/Purchased.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/arlav/Documents/GitHub/ArtToken/client/src/components/ArtItems/Purchased.vue","mtime":1606592072100},{"path":"/Users/arlav/Documents/GitHub/ArtToken/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/arlav/Documents/GitHub/ArtToken/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/arlav/Documents/GitHub/ArtToken/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/arlav/Documents/GitHub/ArtToken/client/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IGluamVjdCwgcmVmIH0gZnJvbSAidnVlIjsKCmltcG9ydCB7IFVzZUV0aGVycyB9IGZyb20gIkAvcGx1Z2lucy9ldGhlcnMiOwppbXBvcnQgeyBBQ0NPVU5UX0lOSkVDVElPTl9LRVkgfSBmcm9tICJAL3ZpZXcvY29uc3RhbnRzIjsKCmV4cG9ydCBkZWZhdWx0IHsKCWFzeW5jIHNldHVwKCkgewoJCWNvbnN0IGFjY291bnQgPSBpbmplY3QoQUNDT1VOVF9JTkpFQ1RJT05fS0VZKTsKCQljb25zdCBldGhlcnMgPSBVc2VFdGhlcnMoKTsKCgkJY29uc3QgdG9rZW5VUklzID0gcmVmKFtdKTsKCgkJY29uc3QgZ2V0VG9rZW5zID0gYXN5bmMgKCkgPT4gewoJCQljb25zdCB0b2tlbkJhbGFuY2UgPSBOdW1iZXIoYXdhaXQgZXRoZXJzLmJhbGFuY2VPZihhY2NvdW50LnZhbHVlKSk7CgkJCWNvbnN0IHRva2VuSWRzID0gYXdhaXQgZXRoZXJzLl90b2tlbklkcygpOwoKCQkJZm9yIChsZXQgaSA9IDE7IGkgPD0gdG9rZW5JZHM7IGkrKykgewoJCQkJY29uc3QgdG9rZW5Pd25lciA9IGF3YWl0IGV0aGVycy5vd25lck9mKGkpOwoJCQkJaWYgKHRva2VuT3duZXIudG9Mb3dlckNhc2UoKSA9PT0gYWNjb3VudC52YWx1ZSkgewoJCQkJCWNvbnN0IHRva2VuVVJJID0gYXdhaXQgZXRoZXJzLnRva2VuVVJJKGkpOwoJCQkJCXRva2VuVVJJcy52YWx1ZS5wdXNoKHRva2VuVVJJKTsKCQkJCX0KCgkJCQlpZiAodG9rZW5VUklzLnZhbHVlLmxlbmd0aCA9PT0gdG9rZW5CYWxhbmNlKSBicmVhazsKCQkJfQoJCX07CgoJCWF3YWl0IGdldFRva2VucygpOwoKCQlyZXR1cm4gewoJCQl0b2tlblVSSXMKCQl9OwoJfQp9Owo="},{"version":3,"sources":["/Users/arlav/Documents/GitHub/ArtToken/client/src/components/ArtItems/Purchased.vue"],"names":[],"mappings":";AAaA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEjC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAExD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;CACd,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACb,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7C,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE1B,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEzB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;GAC7B,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;GAClE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;GAEzC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;IACnC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;KAC/C,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B;;IAEA,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;GACnD;EACD,CAAC;;EAED,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEjB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;GACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACT,CAAC;CACF;AACD,CAAC","file":"/Users/arlav/Documents/GitHub/ArtToken/client/src/components/ArtItems/Purchased.vue","sourceRoot":"","sourcesContent":["<template>\n  <div v-if=\"tokenURIs.length > 0\" class=\"container\">\n    <h2 class=\"title\">My Art Purchases</h2>\n\n    <div class=\"flex art-item-list\">\n      <ul v-for=\"uri in tokenURIs\" :key=\"uri\">\n        <li><img class=\"art-item\" :src=\"uri\" alt=\"Art\" /></li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { inject, ref } from \"vue\";\n\nimport { UseEthers } from \"@/plugins/ethers\";\nimport { ACCOUNT_INJECTION_KEY } from \"@/view/constants\";\n\nexport default {\n\tasync setup() {\n\t\tconst account = inject(ACCOUNT_INJECTION_KEY);\n\t\tconst ethers = UseEthers();\n\n\t\tconst tokenURIs = ref([]);\n\n\t\tconst getTokens = async () => {\n\t\t\tconst tokenBalance = Number(await ethers.balanceOf(account.value));\n\t\t\tconst tokenIds = await ethers._tokenIds();\n\n\t\t\tfor (let i = 1; i <= tokenIds; i++) {\n\t\t\t\tconst tokenOwner = await ethers.ownerOf(i);\n\t\t\t\tif (tokenOwner.toLowerCase() === account.value) {\n\t\t\t\t\tconst tokenURI = await ethers.tokenURI(i);\n\t\t\t\t\ttokenURIs.value.push(tokenURI);\n\t\t\t\t}\n\n\t\t\t\tif (tokenURIs.value.length === tokenBalance) break;\n\t\t\t}\n\t\t};\n\n\t\tawait getTokens();\n\n\t\treturn {\n\t\t\ttokenURIs\n\t\t};\n\t}\n};\n</script>\n\n<style scoped>\n.container {\n  margin: 100px 0;\n  width: 100%;\n}\n</style>\n"]}]}